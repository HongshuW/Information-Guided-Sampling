You are an expert in program synthesis. You are tasked with solving a Syntax-Guided Synthesis (SyGuS) problem. Your goal is to output a function that should produce outputs that satisfy a series of constraints when given specific inputs.

Question:
(set-logic SLIA)

(synth-fun f ((firstname String) (lastname String)) String)

(declare-var firstname String)
(declare-var lastname String)
(constraint (= (f "Launa" "Withers") "Withers Launa"))
(constraint (= (f "Launa" "Withers") "Withers Launa"))
(constraint (= (f "Launa" "Withers") "Withers Launa"))
(constraint (= (f "Lakenya" "Edison") "Edison Lakenya"))
(constraint (= (f "Lakenya" "Edison") "Edison Lakenya"))
(constraint (= (f "Lakenya" "Edison") "Edison Lakenya"))
(constraint (= (f "Brendan" "Hage") "Hage Brendan"))
(constraint (= (f "Brendan" "Hage") "Hage Brendan"))
(constraint (= (f "Brendan" "Hage") "Hage Brendan"))
(constraint (= (f "Bradford" "Lango") "Lango Bradford"))
(constraint (= (f "Bradford" "Lango") "Lango Bradford"))
(constraint (= (f "Bradford" "Lango") "Lango Bradford"))
(constraint (= (f "Rudolf" "Akiyama") "Akiyama Rudolf"))
(constraint (= (f "Rudolf" "Akiyama") "Akiyama Rudolf"))
(constraint (= (f "Rudolf" "Akiyama") "Akiyama Rudolf"))
(constraint (= (f "Lara" "Constable") "Constable Lara"))
(constraint (= (f "Lara" "Constable") "Constable Lara"))
(constraint (= (f "Lara" "Constable") "Constable Lara"))
(constraint (= (f "Madelaine" "Ghoston") "Ghoston Madelaine"))
(constraint (= (f "Madelaine" "Ghoston") "Ghoston Madelaine"))
(constraint (= (f "Madelaine" "Ghoston") "Ghoston Madelaine"))
(constraint (= (f "Salley" "Hornak") "Hornak Salley"))
(constraint (= (f "Salley" "Hornak") "Hornak Salley"))
(constraint (= (f "Salley" "Hornak") "Hornak Salley"))
(constraint (= (f "Micha" "Junkin") "Junkin Micha"))
(constraint (= (f "Micha" "Junkin") "Junkin Micha"))
(constraint (= (f "Micha" "Junkin") "Junkin Micha"))
(constraint (= (f "Teddy" "Bobo") "Bobo Teddy"))
(constraint (= (f "Teddy" "Bobo") "Bobo Teddy"))
(constraint (= (f "Teddy" "Bobo") "Bobo Teddy"))
(constraint (= (f "Coralee" "Scalia") "Scalia Coralee"))
(constraint (= (f "Coralee" "Scalia") "Scalia Coralee"))
(constraint (= (f "Coralee" "Scalia") "Scalia Coralee"))
(constraint (= (f "Jeff" "Quashie") "Quashie Jeff"))
(constraint (= (f "Jeff" "Quashie") "Quashie Jeff"))
(constraint (= (f "Jeff" "Quashie") "Quashie Jeff"))
(constraint (= (f "Vena" "Babiarz") "Babiarz Vena"))
(constraint (= (f "Vena" "Babiarz") "Babiarz Vena"))
(constraint (= (f "Vena" "Babiarz") "Babiarz Vena"))
(constraint (= (f "Karrie" "Lain") "Lain Karrie"))
(constraint (= (f "Karrie" "Lain") "Lain Karrie"))
(constraint (= (f "Karrie" "Lain") "Lain Karrie"))
(constraint (= (f "Tobias" "Dermody") "Dermody Tobias"))
(constraint (= (f "Tobias" "Dermody") "Dermody Tobias"))
(constraint (= (f "Tobias" "Dermody") "Dermody Tobias"))
(constraint (= (f "Celsa" "Hopkins") "Hopkins Celsa"))
(constraint (= (f "Celsa" "Hopkins") "Hopkins Celsa"))
(constraint (= (f "Celsa" "Hopkins") "Hopkins Celsa"))
(constraint (= (f "Kimberley" "Halpern") "Halpern Kimberley"))
(constraint (= (f "Kimberley" "Halpern") "Halpern Kimberley"))
(constraint (= (f "Kimberley" "Halpern") "Halpern Kimberley"))
(constraint (= (f "Phillip" "Rowden") "Rowden Phillip"))
(constraint (= (f "Phillip" "Rowden") "Rowden Phillip"))
(constraint (= (f "Phillip" "Rowden") "Rowden Phillip"))
(constraint (= (f "Elias" "Neil") "Neil Elias"))
(constraint (= (f "Elias" "Neil") "Neil Elias"))
(constraint (= (f "Elias" "Neil") "Neil Elias"))
(constraint (= (f "Lashanda" "Cortes") "Cortes Lashanda"))
(constraint (= (f "Lashanda" "Cortes") "Cortes Lashanda"))
(constraint (= (f "Lashanda" "Cortes") "Cortes Lashanda"))
(constraint (= (f "Mackenzie" "Spell") "Spell Mackenzie"))
(constraint (= (f "Mackenzie" "Spell") "Spell Mackenzie"))
(constraint (= (f "Mackenzie" "Spell") "Spell Mackenzie"))
(constraint (= (f "Kathlyn" "Eccleston") "Eccleston Kathlyn"))
(constraint (= (f "Kathlyn" "Eccleston") "Eccleston Kathlyn"))
(constraint (= (f "Kathlyn" "Eccleston") "Eccleston Kathlyn"))
(constraint (= (f "Georgina" "Brescia") "Brescia Georgina"))
(constraint (= (f "Georgina" "Brescia") "Brescia Georgina"))
(constraint (= (f "Georgina" "Brescia") "Brescia Georgina"))
(constraint (= (f "Beata" "Miah") "Miah Beata"))
(constraint (= (f "Beata" "Miah") "Miah Beata"))
(constraint (= (f "Beata" "Miah") "Miah Beata"))
(constraint (= (f "Desiree" "Seamons") "Seamons Desiree"))
(constraint (= (f "Desiree" "Seamons") "Seamons Desiree"))
(constraint (= (f "Desiree" "Seamons") "Seamons Desiree"))
(constraint (= (f "Jeanice" "Soderstrom") "Soderstrom Jeanice"))
(constraint (= (f "Jeanice" "Soderstrom") "Soderstrom Jeanice"))
(constraint (= (f "Jeanice" "Soderstrom") "Soderstrom Jeanice"))
(constraint (= (f "Mariel" "Jurgens") "Jurgens Mariel"))
(constraint (= (f "Mariel" "Jurgens") "Jurgens Mariel"))
(constraint (= (f "Mariel" "Jurgens") "Jurgens Mariel"))
(constraint (= (f "Alida" "Bogle") "Bogle Alida"))
(constraint (= (f "Alida" "Bogle") "Bogle Alida"))
(constraint (= (f "Alida" "Bogle") "Bogle Alida"))
(constraint (= (f "Jacqualine" "Olague") "Olague Jacqualine"))
(constraint (= (f "Jacqualine" "Olague") "Olague Jacqualine"))
(constraint (= (f "Jacqualine" "Olague") "Olague Jacqualine"))
(constraint (= (f "Joaquin" "Clasen") "Clasen Joaquin"))
(constraint (= (f "Joaquin" "Clasen") "Clasen Joaquin"))
(constraint (= (f "Joaquin" "Clasen") "Clasen Joaquin"))
(constraint (= (f "Samuel" "Richert") "Richert Samuel"))
(constraint (= (f "Samuel" "Richert") "Richert Samuel"))
(constraint (= (f "Samuel" "Richert") "Richert Samuel"))
(constraint (= (f "Malissa" "Marcus") "Marcus Malissa"))
(constraint (= (f "Malissa" "Marcus") "Marcus Malissa"))
(constraint (= (f "Malissa" "Marcus") "Marcus Malissa"))
(constraint (= (f "Alaina" "Partida") "Partida Alaina"))
(constraint (= (f "Alaina" "Partida") "Partida Alaina"))
(constraint (= (f "Alaina" "Partida") "Partida Alaina"))
(constraint (= (f "Trinidad" "Mulloy") "Mulloy Trinidad"))
(constraint (= (f "Trinidad" "Mulloy") "Mulloy Trinidad"))
(constraint (= (f "Trinidad" "Mulloy") "Mulloy Trinidad"))
(constraint (= (f "Carlene" "Garrard") "Garrard Carlene"))
(constraint (= (f "Carlene" "Garrard") "Garrard Carlene"))
(constraint (= (f "Carlene" "Garrard") "Garrard Carlene"))
(constraint (= (f "Melodi" "Chism") "Chism Melodi"))
(constraint (= (f "Melodi" "Chism") "Chism Melodi"))
(constraint (= (f "Melodi" "Chism") "Chism Melodi"))
(constraint (= (f "Bess" "Chilcott") "Chilcott Bess"))
(constraint (= (f "Bess" "Chilcott") "Chilcott Bess"))
(constraint (= (f "Bess" "Chilcott") "Chilcott Bess"))
(constraint (= (f "Chong" "Aylward") "Aylward Chong"))
(constraint (= (f "Chong" "Aylward") "Aylward Chong"))
(constraint (= (f "Chong" "Aylward") "Aylward Chong"))
(constraint (= (f "Jani" "Ramthun") "Ramthun Jani"))
(constraint (= (f "Jani" "Ramthun") "Ramthun Jani"))
(constraint (= (f "Jani" "Ramthun") "Ramthun Jani"))
(constraint (= (f "Jacquiline" "Heintz") "Heintz Jacquiline"))
(constraint (= (f "Jacquiline" "Heintz") "Heintz Jacquiline"))
(constraint (= (f "Jacquiline" "Heintz") "Heintz Jacquiline"))
(constraint (= (f "Hayley" "Marquess") "Marquess Hayley"))
(constraint (= (f "Hayley" "Marquess") "Marquess Hayley"))
(constraint (= (f "Hayley" "Marquess") "Marquess Hayley"))
(constraint (= (f "Andria" "Spagnoli") "Spagnoli Andria"))
(constraint (= (f "Andria" "Spagnoli") "Spagnoli Andria"))
(constraint (= (f "Andria" "Spagnoli") "Spagnoli Andria"))
(constraint (= (f "Irwin" "Covelli") "Covelli Irwin"))
(constraint (= (f "Irwin" "Covelli") "Covelli Irwin"))
(constraint (= (f "Irwin" "Covelli") "Covelli Irwin"))
(constraint (= (f "Gertude" "Montiel") "Montiel Gertude"))
(constraint (= (f "Gertude" "Montiel") "Montiel Gertude"))
(constraint (= (f "Gertude" "Montiel") "Montiel Gertude"))
(constraint (= (f "Stefany" "Reily") "Reily Stefany"))
(constraint (= (f "Stefany" "Reily") "Reily Stefany"))
(constraint (= (f "Stefany" "Reily") "Reily Stefany"))
(constraint (= (f "Rae" "Mcgaughey") "Mcgaughey Rae"))
(constraint (= (f "Rae" "Mcgaughey") "Mcgaughey Rae"))
(constraint (= (f "Rae" "Mcgaughey") "Mcgaughey Rae"))
(constraint (= (f "Cruz" "Latimore") "Latimore Cruz"))
(constraint (= (f "Cruz" "Latimore") "Latimore Cruz"))
(constraint (= (f "Cruz" "Latimore") "Latimore Cruz"))
(constraint (= (f "Maryann" "Casler") "Casler Maryann"))
(constraint (= (f "Maryann" "Casler") "Casler Maryann"))
(constraint (= (f "Maryann" "Casler") "Casler Maryann"))
(constraint (= (f "Annalisa" "Gregori") "Gregori Annalisa"))
(constraint (= (f "Annalisa" "Gregori") "Gregori Annalisa"))
(constraint (= (f "Annalisa" "Gregori") "Gregori Annalisa"))
(constraint (= (f "Jenee" "Pannell") "Pannell Jenee"))
(constraint (= (f "Jenee" "Pannell") "Pannell Jenee"))
(constraint (= (f "Jenee" "Pannell") "Pannell Jenee"))
(constraint (= (f "Launa" "Withers") "Withers Launa"))
(constraint (= (f "Lakenya" "Edison") "Edison Lakenya"))
(constraint (= (f "Brendan" "Hage") "Hage Brendan"))
(constraint (= (f "Bradford" "Lango") "Lango Bradford"))
(constraint (= (f "Rudolf" "Akiyama") "Akiyama Rudolf"))
(constraint (= (f "Lara" "Constable") "Constable Lara"))
(constraint (= (f "Madelaine" "Ghoston") "Ghoston Madelaine"))
(constraint (= (f "Salley" "Hornak") "Hornak Salley"))
(constraint (= (f "Micha" "Junkin") "Junkin Micha"))
(constraint (= (f "Teddy" "Bobo") "Bobo Teddy"))
(constraint (= (f "Coralee" "Scalia") "Scalia Coralee"))
(constraint (= (f "Jeff" "Quashie") "Quashie Jeff"))
(constraint (= (f "Vena" "Babiarz") "Babiarz Vena"))
(constraint (= (f "Karrie" "Lain") "Lain Karrie"))
(constraint (= (f "Tobias" "Dermody") "Dermody Tobias"))
(constraint (= (f "Celsa" "Hopkins") "Hopkins Celsa"))
(constraint (= (f "Kimberley" "Halpern") "Halpern Kimberley"))
(constraint (= (f "Phillip" "Rowden") "Rowden Phillip"))
(constraint (= (f "Elias" "Neil") "Neil Elias"))
(constraint (= (f "Lashanda" "Cortes") "Cortes Lashanda"))
(constraint (= (f "Mackenzie" "Spell") "Spell Mackenzie"))
(constraint (= (f "Kathlyn" "Eccleston") "Eccleston Kathlyn"))
(constraint (= (f "Georgina" "Brescia") "Brescia Georgina"))
(constraint (= (f "Beata" "Miah") "Miah Beata"))
(constraint (= (f "Desiree" "Seamons") "Seamons Desiree"))
(constraint (= (f "Jeanice" "Soderstrom") "Soderstrom Jeanice"))
(constraint (= (f "Mariel" "Jurgens") "Jurgens Mariel"))
(constraint (= (f "Alida" "Bogle") "Bogle Alida"))
(constraint (= (f "Jacqualine" "Olague") "Olague Jacqualine"))
(constraint (= (f "Joaquin" "Clasen") "Clasen Joaquin"))
(constraint (= (f "Samuel" "Richert") "Richert Samuel"))
(constraint (= (f "Malissa" "Marcus") "Marcus Malissa"))
(constraint (= (f "Alaina" "Partida") "Partida Alaina"))
(constraint (= (f "Trinidad" "Mulloy") "Mulloy Trinidad"))
(constraint (= (f "Carlene" "Garrard") "Garrard Carlene"))
(constraint (= (f "Melodi" "Chism") "Chism Melodi"))
(constraint (= (f "Bess" "Chilcott") "Chilcott Bess"))
(constraint (= (f "Chong" "Aylward") "Aylward Chong"))
(constraint (= (f "Jani" "Ramthun") "Ramthun Jani"))
(constraint (= (f "Jacquiline" "Heintz") "Heintz Jacquiline"))
(constraint (= (f "Hayley" "Marquess") "Marquess Hayley"))
(constraint (= (f "Andria" "Spagnoli") "Spagnoli Andria"))
(constraint (= (f "Irwin" "Covelli") "Covelli Irwin"))
(constraint (= (f "Gertude" "Montiel") "Montiel Gertude"))
(constraint (= (f "Stefany" "Reily") "Reily Stefany"))
(constraint (= (f "Rae" "Mcgaughey") "Mcgaughey Rae"))
(constraint (= (f "Cruz" "Latimore") "Latimore Cruz"))
(constraint (= (f "Maryann" "Casler") "Casler Maryann"))
(constraint (= (f "Annalisa" "Gregori") "Gregori Annalisa"))
(constraint (= (f "Jenee" "Pannell") "Pannell Jenee"))

(check-synth)
Solution:
(define-fun f ((firstname String) (lastname String)) String (str.++ (str.++ lastname " ") firstname))

Question:
(set-logic SLIA)

(synth-fun f ((name String)) String)

(declare-var name String)
(constraint (= (f "Nancy FreeHafer") "FreeHafer"))
(constraint (= (f "Andrew Cencici") "Cencici"))
(constraint (= (f "Jan Kotas") "Kotas"))
(constraint (= (f "Mariya Sergienko") "Sergienko"))
(constraint (= (f "Launa Withers") "Withers"))
(constraint (= (f "Launa Withers") "Withers"))
(constraint (= (f "Launa Withers") "Withers"))
(constraint (= (f "Lakenya Edison") "Edison"))
(constraint (= (f "Lakenya Edison") "Edison"))
(constraint (= (f "Lakenya Edison") "Edison"))
(constraint (= (f "Brendan Hage") "Hage"))
(constraint (= (f "Brendan Hage") "Hage"))
(constraint (= (f "Brendan Hage") "Hage"))
(constraint (= (f "Bradford Lango") "Lango"))
(constraint (= (f "Bradford Lango") "Lango"))
(constraint (= (f "Bradford Lango") "Lango"))
(constraint (= (f "Rudolf Akiyama") "Akiyama"))
(constraint (= (f "Rudolf Akiyama") "Akiyama"))
(constraint (= (f "Rudolf Akiyama") "Akiyama"))
(constraint (= (f "Lara Constable") "Constable"))
(constraint (= (f "Lara Constable") "Constable"))
(constraint (= (f "Lara Constable") "Constable"))
(constraint (= (f "Madelaine Ghoston") "Ghoston"))
(constraint (= (f "Madelaine Ghoston") "Ghoston"))
(constraint (= (f "Madelaine Ghoston") "Ghoston"))
(constraint (= (f "Salley Hornak") "Hornak"))
(constraint (= (f "Salley Hornak") "Hornak"))
(constraint (= (f "Salley Hornak") "Hornak"))
(constraint (= (f "Micha Junkin") "Junkin"))
(constraint (= (f "Micha Junkin") "Junkin"))
(constraint (= (f "Micha Junkin") "Junkin"))
(constraint (= (f "Teddy Bobo") "Bobo"))
(constraint (= (f "Teddy Bobo") "Bobo"))
(constraint (= (f "Teddy Bobo") "Bobo"))
(constraint (= (f "Coralee Scalia") "Scalia"))
(constraint (= (f "Coralee Scalia") "Scalia"))
(constraint (= (f "Coralee Scalia") "Scalia"))
(constraint (= (f "Jeff Quashie") "Quashie"))
(constraint (= (f "Jeff Quashie") "Quashie"))
(constraint (= (f "Jeff Quashie") "Quashie"))
(constraint (= (f "Vena Babiarz") "Babiarz"))
(constraint (= (f "Vena Babiarz") "Babiarz"))
(constraint (= (f "Vena Babiarz") "Babiarz"))
(constraint (= (f "Karrie Lain") "Lain"))
(constraint (= (f "Karrie Lain") "Lain"))
(constraint (= (f "Karrie Lain") "Lain"))
(constraint (= (f "Tobias Dermody") "Dermody"))
(constraint (= (f "Tobias Dermody") "Dermody"))
(constraint (= (f "Tobias Dermody") "Dermody"))
(constraint (= (f "Celsa Hopkins") "Hopkins"))
(constraint (= (f "Celsa Hopkins") "Hopkins"))
(constraint (= (f "Celsa Hopkins") "Hopkins"))
(constraint (= (f "Kimberley Halpern") "Halpern"))
(constraint (= (f "Kimberley Halpern") "Halpern"))
(constraint (= (f "Kimberley Halpern") "Halpern"))
(constraint (= (f "Phillip Rowden") "Rowden"))
(constraint (= (f "Phillip Rowden") "Rowden"))
(constraint (= (f "Phillip Rowden") "Rowden"))
(constraint (= (f "Elias Neil") "Neil"))
(constraint (= (f "Elias Neil") "Neil"))
(constraint (= (f "Elias Neil") "Neil"))
(constraint (= (f "Lashanda Cortes") "Cortes"))
(constraint (= (f "Lashanda Cortes") "Cortes"))
(constraint (= (f "Lashanda Cortes") "Cortes"))
(constraint (= (f "Mackenzie Spell") "Spell"))
(constraint (= (f "Mackenzie Spell") "Spell"))
(constraint (= (f "Mackenzie Spell") "Spell"))
(constraint (= (f "Kathlyn Eccleston") "Eccleston"))
(constraint (= (f "Kathlyn Eccleston") "Eccleston"))
(constraint (= (f "Kathlyn Eccleston") "Eccleston"))
(constraint (= (f "Georgina Brescia") "Brescia"))
(constraint (= (f "Georgina Brescia") "Brescia"))
(constraint (= (f "Georgina Brescia") "Brescia"))
(constraint (= (f "Beata Miah") "Miah"))
(constraint (= (f "Beata Miah") "Miah"))
(constraint (= (f "Beata Miah") "Miah"))
(constraint (= (f "Desiree Seamons") "Seamons"))
(constraint (= (f "Desiree Seamons") "Seamons"))
(constraint (= (f "Desiree Seamons") "Seamons"))
(constraint (= (f "Jeanice Soderstrom") "Soderstrom"))
(constraint (= (f "Jeanice Soderstrom") "Soderstrom"))
(constraint (= (f "Jeanice Soderstrom") "Soderstrom"))
(constraint (= (f "Mariel Jurgens") "Jurgens"))
(constraint (= (f "Mariel Jurgens") "Jurgens"))
(constraint (= (f "Mariel Jurgens") "Jurgens"))
(constraint (= (f "Alida Bogle") "Bogle"))
(constraint (= (f "Alida Bogle") "Bogle"))
(constraint (= (f "Alida Bogle") "Bogle"))
(constraint (= (f "Jacqualine Olague") "Olague"))
(constraint (= (f "Jacqualine Olague") "Olague"))
(constraint (= (f "Jacqualine Olague") "Olague"))
(constraint (= (f "Joaquin Clasen") "Clasen"))
(constraint (= (f "Joaquin Clasen") "Clasen"))
(constraint (= (f "Joaquin Clasen") "Clasen"))
(constraint (= (f "Samuel Richert") "Richert"))
(constraint (= (f "Samuel Richert") "Richert"))
(constraint (= (f "Samuel Richert") "Richert"))
(constraint (= (f "Malissa Marcus") "Marcus"))
(constraint (= (f "Malissa Marcus") "Marcus"))
(constraint (= (f "Malissa Marcus") "Marcus"))
(constraint (= (f "Alaina Partida") "Partida"))
(constraint (= (f "Alaina Partida") "Partida"))
(constraint (= (f "Alaina Partida") "Partida"))
(constraint (= (f "Trinidad Mulloy") "Mulloy"))
(constraint (= (f "Trinidad Mulloy") "Mulloy"))
(constraint (= (f "Trinidad Mulloy") "Mulloy"))
(constraint (= (f "Carlene Garrard") "Garrard"))
(constraint (= (f "Carlene Garrard") "Garrard"))
(constraint (= (f "Carlene Garrard") "Garrard"))
(constraint (= (f "Melodi Chism") "Chism"))
(constraint (= (f "Melodi Chism") "Chism"))
(constraint (= (f "Melodi Chism") "Chism"))
(constraint (= (f "Bess Chilcott") "Chilcott"))
(constraint (= (f "Bess Chilcott") "Chilcott"))
(constraint (= (f "Bess Chilcott") "Chilcott"))
(constraint (= (f "Chong Aylward") "Aylward"))
(constraint (= (f "Chong Aylward") "Aylward"))
(constraint (= (f "Chong Aylward") "Aylward"))
(constraint (= (f "Jani Ramthun") "Ramthun"))
(constraint (= (f "Jani Ramthun") "Ramthun"))
(constraint (= (f "Jani Ramthun") "Ramthun"))
(constraint (= (f "Jacquiline Heintz") "Heintz"))
(constraint (= (f "Jacquiline Heintz") "Heintz"))
(constraint (= (f "Jacquiline Heintz") "Heintz"))
(constraint (= (f "Hayley Marquess") "Marquess"))
(constraint (= (f "Hayley Marquess") "Marquess"))
(constraint (= (f "Hayley Marquess") "Marquess"))
(constraint (= (f "Andria Spagnoli") "Spagnoli"))
(constraint (= (f "Andria Spagnoli") "Spagnoli"))
(constraint (= (f "Andria Spagnoli") "Spagnoli"))
(constraint (= (f "Irwin Covelli") "Covelli"))
(constraint (= (f "Irwin Covelli") "Covelli"))
(constraint (= (f "Irwin Covelli") "Covelli"))
(constraint (= (f "Gertude Montiel") "Montiel"))
(constraint (= (f "Gertude Montiel") "Montiel"))
(constraint (= (f "Gertude Montiel") "Montiel"))
(constraint (= (f "Stefany Reily") "Reily"))
(constraint (= (f "Stefany Reily") "Reily"))
(constraint (= (f "Stefany Reily") "Reily"))
(constraint (= (f "Rae Mcgaughey") "Mcgaughey"))
(constraint (= (f "Rae Mcgaughey") "Mcgaughey"))
(constraint (= (f "Rae Mcgaughey") "Mcgaughey"))
(constraint (= (f "Cruz Latimore") "Latimore"))
(constraint (= (f "Cruz Latimore") "Latimore"))
(constraint (= (f "Cruz Latimore") "Latimore"))
(constraint (= (f "Maryann Casler") "Casler"))
(constraint (= (f "Maryann Casler") "Casler"))
(constraint (= (f "Maryann Casler") "Casler"))
(constraint (= (f "Annalisa Gregori") "Gregori"))
(constraint (= (f "Annalisa Gregori") "Gregori"))
(constraint (= (f "Annalisa Gregori") "Gregori"))
(constraint (= (f "Jenee Pannell") "Pannell"))
(constraint (= (f "Jenee Pannell") "Pannell"))
(constraint (= (f "Jenee Pannell") "Pannell"))
(constraint (= (f "Launa Withers") "Withers"))
(constraint (= (f "Lakenya Edison") "Edison"))
(constraint (= (f "Brendan Hage") "Hage"))
(constraint (= (f "Bradford Lango") "Lango"))
(constraint (= (f "Rudolf Akiyama") "Akiyama"))
(constraint (= (f "Lara Constable") "Constable"))
(constraint (= (f "Madelaine Ghoston") "Ghoston"))
(constraint (= (f "Salley Hornak") "Hornak"))
(constraint (= (f "Micha Junkin") "Junkin"))
(constraint (= (f "Teddy Bobo") "Bobo"))
(constraint (= (f "Coralee Scalia") "Scalia"))
(constraint (= (f "Jeff Quashie") "Quashie"))
(constraint (= (f "Vena Babiarz") "Babiarz"))
(constraint (= (f "Karrie Lain") "Lain"))
(constraint (= (f "Tobias Dermody") "Dermody"))
(constraint (= (f "Celsa Hopkins") "Hopkins"))
(constraint (= (f "Kimberley Halpern") "Halpern"))
(constraint (= (f "Phillip Rowden") "Rowden"))
(constraint (= (f "Elias Neil") "Neil"))
(constraint (= (f "Lashanda Cortes") "Cortes"))
(constraint (= (f "Mackenzie Spell") "Spell"))
(constraint (= (f "Kathlyn Eccleston") "Eccleston"))
(constraint (= (f "Georgina Brescia") "Brescia"))
(constraint (= (f "Beata Miah") "Miah"))
(constraint (= (f "Desiree Seamons") "Seamons"))
(constraint (= (f "Jeanice Soderstrom") "Soderstrom"))
(constraint (= (f "Mariel Jurgens") "Jurgens"))
(constraint (= (f "Alida Bogle") "Bogle"))
(constraint (= (f "Jacqualine Olague") "Olague"))
(constraint (= (f "Joaquin Clasen") "Clasen"))
(constraint (= (f "Samuel Richert") "Richert"))
(constraint (= (f "Malissa Marcus") "Marcus"))
(constraint (= (f "Alaina Partida") "Partida"))
(constraint (= (f "Trinidad Mulloy") "Mulloy"))
(constraint (= (f "Carlene Garrard") "Garrard"))
(constraint (= (f "Melodi Chism") "Chism"))
(constraint (= (f "Bess Chilcott") "Chilcott"))
(constraint (= (f "Chong Aylward") "Aylward"))
(constraint (= (f "Jani Ramthun") "Ramthun"))
(constraint (= (f "Jacquiline Heintz") "Heintz"))
(constraint (= (f "Hayley Marquess") "Marquess"))
(constraint (= (f "Andria Spagnoli") "Spagnoli"))
(constraint (= (f "Irwin Covelli") "Covelli"))
(constraint (= (f "Gertude Montiel") "Montiel"))
(constraint (= (f "Stefany Reily") "Reily"))
(constraint (= (f "Rae Mcgaughey") "Mcgaughey"))
(constraint (= (f "Cruz Latimore") "Latimore"))
(constraint (= (f "Maryann Casler") "Casler"))
(constraint (= (f "Annalisa Gregori") "Gregori"))
(constraint (= (f "Jenee Pannell") "Pannell"))

(check-synth)
Solution:
imeou

Question:
(set-logic SLIA)

(synth-fun f ((firstname String) (lastname String)) String)

(declare-var firstname String)
(declare-var lastname String)
(constraint (= (f "Launa" "Withers") "Withers Launa"))
(constraint (= (f "Lakenya" "Edison") "Edison Lakenya"))
(constraint (= (f "Brendan" "Hage") "Hage Brendan"))
(constraint (= (f "Bradford" "Lango") "Lango Bradford"))
(constraint (= (f "Rudolf" "Akiyama") "Akiyama Rudolf"))
(constraint (= (f "Lara" "Constable") "Constable Lara"))

(check-synth)
Solution:
(define-fun f ((firstname String) (lastname String)) String (str.++ (str.++ lastname " ") firstname))

Question:
(set-logic SLIA)

(synth-fun f ((col1 String) (col2 String)) String)

(declare-var col1 String)
(declare-var col2 String)
(constraint (= (f "University of Pennsylvania" "Phialdelphia, PA, USA") "Phialdelphia, PA, USA"))
(constraint (= (f "UCLA" "Los Angeles, CA") "Los Angeles, CA, USA"))
(constraint (= (f "Cornell University" "Ithaca, New York, USA") "Ithaca, NY, USA"))
(constraint (= (f "Penn" "Philadelphia, PA, USA") "Philadelphia, PA, USA"))
(constraint (= (f "University of Maryland College Park" "College Park, MD") "College Park, MD, USA"))
(constraint (= (f "University of Michigan" "Ann Arbor, MI, USA") "Ann Arbor, MI, USA"))
(constraint (= (f "UC Berkeley" "Berkeley, CA") "Berkeley, CA, USA"))
(constraint (= (f "MIT" "Cambridge, MA") "Cambridge, MA, USA"))
(constraint (= (f "Rice University" "Houston, TX") "Houston, TX, USA"))
(constraint (= (f "Yale University" "New Haven, CT, USA") "New Haven, CT, USA"))
(constraint (= (f "Columbia University" "New York, NY, USA") "New York, NY, USA"))
(constraint (= (f "NYU" "New York, New York, USA") "New York, NY, USA"))
(constraint (= (f "UC Berkeley" "Berkeley, CA") "Berkeley, CA, USA"))
(constraint (= (f "UIUC" "Urbana, IL") "Urbana, IL, USA"))
(constraint (= (f "Temple University" "Philadelphia, PA") "Philadelphia, PA, USA"))
(constraint (= (f "Harvard University" "Cambridge, MA, USA") "Cambridge, MA, USA"))
(constraint (= (f "University of Connecticut" "Storrs, CT, USA") "Storrs, CT, USA"))
(constraint (= (f "Drexel University" "Philadelphia, PA") "Philadelphia, PA, USA"))
(constraint (= (f "New Haven University" "New Haven, CT, USA") "New Haven, CT, USA"))
(constraint (= (f "University of California, Santa Barbara" "Santa Barbara, CA, USA") "Santa Barbara, CA, USA"))

(check-synth)
Solution:
