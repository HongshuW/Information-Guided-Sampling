You are an expert in program synthesis. You are tasked with solving a Syntax-Guided Synthesis (SyGuS) problem. Your goal is to output a function that should produce outputs that satisfy a series of constraints when given specific inputs.

Question:
(set-logic SLIA)

(synth-fun f ((col1 String) (col2 String)) String)

(declare-var col1 String)
(declare-var col2 String)
(constraint (= (f "University of Pennsylvania" "Phialdelphia, PA, USA") "Phialdelphia, PA, USA"))
(constraint (= (f "UCLA" "Los Angeles, CA") "Los Angeles, CA, USA"))
(constraint (= (f "Cornell University" "Ithaca, New York, USA") "Ithaca, New York, USA"))
(constraint (= (f "Penn" "Philadelphia, PA, USA") "Philadelphia, PA, USA"))
(constraint (= (f "University of Maryland College Park" "College Park, MD") "College Park, MD, USA"))
(constraint (= (f "University of Michigan" "Ann Arbor, MI, USA") "Ann Arbor, MI, USA"))

(check-synth)
Solution:
(define-fun f ((col1 String) (col2 String)) String (ite (str.suffixof "USA" col2) col2 (str.++ col2 (str.++ "," (str.++ " " "USA")))))

Question:
(set-logic SLIA)

(synth-fun f ((col1 String) (col2 String)) String)

(declare-var col1 String)
(declare-var col2 String)
(constraint (= (f "University of Pennsylvania" "Phialdelphia, PA, USA") "Phialdelphia, PA, USA"))
(constraint (= (f "UCLA" "Los Angeles, CA") "Los Angeles, CA, USA"))
(constraint (= (f "Cornell University" "Ithaca, New York, USA") "Ithaca, NY, USA"))
(constraint (= (f "Penn" "Philadelphia, PA, USA") "Philadelphia, PA, USA"))
(constraint (= (f "University of Maryland College Park" "College Park, MD") "College Park, MD, USA"))
(constraint (= (f "University of Michigan" "Ann Arbor, MI, USA") "Ann Arbor, MI, USA"))
(constraint (= (f "Columbia University" "New York, NY, USA") "New York, NY, USA"))
(constraint (= (f "NYU" "New York, New York, USA") "New York, NY, USA"))

(check-synth)
Solution:
(define-fun f ((col1 String) (col2 String)) String (let ((_let_1 (str.++ col2 ","))) (ite (str.prefixof "New York" col2) (str.++ "New York" (str.++ "," (str.++ " " (str.++ "NY" (str.++ "," (str.++ " " "USA")))))) (ite (str.suffixof "USA" col2) (str.replace col2 "New York" "NY") (str.++ (str.++ (ite (str.suffixof "CA" col2) _let_1 _let_1) " ") "USA")))))

Question:
(set-logic SLIA)

(synth-fun f ((col1 String) (col2 String)) String)

(declare-var col1 String)
(declare-var col2 String)
(constraint (= (f "University of Pennsylvania" "Phialdelphia, PA, USA") "University of Pennsylvania, Phialdelphia, PA, USA"))
(constraint (= (f "Cornell University" "Ithaca, New York, USA") "Cornell University, Ithaca, New York, USA"))
(constraint (= (f "University of Maryland College Park" "College Park, MD") "University of Maryland College Park, College Park, MD"))
(constraint (= (f "University of Michigan" "Ann Arbor, MI, USA") "University of Michigan, Ann Arbor, MI, USA"))
(constraint (= (f "Yale University" "New Haven, CT, USA") "Yale University, New Haven, CT, USA"))
(constraint (= (f "Columbia University" "New York, NY, USA") "Columbia University, New York, NY, USA"))

(check-synth)
Solution:
(define-fun f ((col1 String) (col2 String)) String (str.++ col1 (str.++ "," (str.++ " " col2))))

Question:
(set-logic SLIA)

(synth-fun f ((col1 String) (col2 String)) String)

(declare-var col1 String)
(declare-var col2 String)
(constraint (= (f "University of Pennsylvania" "Phialdelphia, PA, USA") "Phialdelphia, PA, USA"))
(constraint (= (f "UCLA" "Los Angeles, CA") "Los Angeles, CA, USA"))
(constraint (= (f "Cornell University" "Ithaca, New York, USA") "Ithaca, NY, USA"))
(constraint (= (f "Penn" "Philadelphia, PA, USA") "Philadelphia, PA, USA"))
(constraint (= (f "University of Maryland College Park" "College Park, MD") "College Park, MD, USA"))
(constraint (= (f "University of Michigan" "Ann Arbor, MI, USA") "Ann Arbor, MI, USA"))
(constraint (= (f "Columbia University" "New York, NY, USA") "New York, NY, USA"))
(constraint (= (f "NYU" "New York, New York, USA") "New York, NY, USA"))

(check-synth)
Solution:
